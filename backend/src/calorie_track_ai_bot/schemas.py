# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-09-08T02:57:42+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Any

from pydantic import BaseModel, Field


class Status(Enum):
    queued = "queued"
    running = "running"
    done = "done"
    failed = "failed"


class MealType(Enum):
    breakfast = "breakfast"
    lunch = "lunch"
    dinner = "dinner"
    snack = "snack"


class EstimateItem(BaseModel):
    label: str
    kcal: float
    confidence: float


class PhotoCreateRequest(BaseModel):
    content_type: str = Field(..., description="MIME type of the image (e.g., image/jpeg)")


class MealCreateManualRequest(BaseModel):
    meal_date: date
    meal_type: MealType
    kcal_total: float
    macros: dict[str, Any] | None = None


class MealCreateFromEstimateRequest(BaseModel):
    meal_date: date
    meal_type: MealType
    estimate_id: str
    overrides: dict[str, Any] | None = None


class MealCreateResponse(BaseModel):
    meal_id: str


class PresignResponse(BaseModel):
    photo_id: str
    upload_url: str


class EstimateQueuedResponse(BaseModel):
    estimate_id: str
    status: Status


class EstimateResponse(BaseModel):
    id: str = Field(..., description="Estimate ID")
    photo_id: str
    kcal_mean: float
    kcal_min: float
    kcal_max: float
    confidence: float
    breakdown: list[EstimateItem]
    status: Status | None = None
